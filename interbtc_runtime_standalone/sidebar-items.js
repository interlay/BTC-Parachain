initSidebarItems({"constant":[["BITCOIN_BLOCK_SPACING",""],["BITCOIN_SPACING_MS",""],["DAYS",""],["DOT",""],["EPOCH_DURATION_IN_BLOCKS",""],["HOURS",""],["INTERBTC",""],["MICROROC",""],["MILLIROC",""],["MILLISECS_PER_BLOCK",""],["MINUTES",""],["PRIMARY_PROBABILITY",""],["ROC",""],["SLOT_DURATION",""],["TARGET_SPACING","Target Spacing: 10 minutes (600 seconds)"],["VERSION","This runtime version."],["WASM_BINARY",""],["WASM_BINARY_BLOATY",""],["WEIGHT_PER_SECOND",""]],"enum":[["Call",""],["CurrencyId",""],["DispatchClass","A generalized group of dispatch types."],["Event",""],["IssueEvent","The event emitted by this pallet."],["NominationEvent","The event emitted by this pallet."],["OriginCaller",""],["RedeemEvent","The event emitted by this pallet."],["RefundEvent","The event emitted by this pallet."],["RelayCall","Contains one variant per dispatchable that can be called by an extrinsic."],["RelayEvent","The event emitted by this pallet."],["ReplaceEvent","The event emitted by this pallet."],["TimestampCall","Contains one variant per dispatchable that can be called by an extrinsic."]],"fn":[["native_version","The version information used to identify this runtime when compiled natively."]],"macro":[["construct_runtime","Construct a runtime, with the given name and the given pallets."],["parameter_types","Create new implementations of the `Get` trait."]],"mod":[["api",""]],"struct":[["BalanceWrapper","a wrapper around a balance, used in RPC to workaround a bug where using u128 in runtime-apis fails. See https://github.com/paritytech/substrate/issues/4641"],["BlockExecutionWeight","Importing a block with 0 txs takes ~5 ms"],["BlockHashCount",""],["ExistentialDeposits",""],["ExtrinsicBaseWeight","Executing 10,000 System remarks (no-op) txs takes ~1.26 seconds -> ~125 Âµs per tx"],["FeeAccount",""],["FeePalletId",""],["GenesisConfig",""],["GetCollateralCurrencyId",""],["GetWrappedCurrencyId",""],["IdentityFee","Implementor of `WeightToFeePolynomial` that maps one unit of weight to one unit of fee."],["IssueRequest",""],["MaxLocks",""],["MinimumPeriod",""],["Origin",""],["PalletInfo","Provides an implementation of `PalletInfo` to provide information about the pallet setup in the runtime."],["ParachainBlocksPerBitcoinBlock",""],["Perbill","A fixed point representation of a number in the range [0, 1]."],["Permill","A fixed point representation of a number in the range [0, 1]."],["RedeemRequest",""],["RefundRequest",""],["ReplaceRequest",""],["RocksDbWeight","By default, Substrate uses RocksDB, so this will be the weight used throughout the runtime."],["Runtime",""],["RuntimeApi",""],["RuntimeApiImpl","Implements all runtime apis for the client side."],["RuntimeBlockLength",""],["RuntimeBlockWeights",""],["SS58Prefix",""],["SessionKeys",""],["TransactionByteFee",""],["VaultPalletId",""],["Version",""]],"trait":[["BuildStorage","Complex storage builder stuff."],["Get","A trait for querying a single value from a type."],["KeyOwnerProofSystem","Something which can compute and check proofs of a historical key owner and return full identification data of that key owner."],["Randomness","A trait that is able to provide randomness."],["StorageValue","A trait for working with macro-generated storage values under the substrate storage API."]],"type":[["AccountId","Some way of identifying an account on the chain. We intentionally make it equivalent to the public key of our transaction signing scheme."],["Address","The address format for describing accounts."],["AllModules","All modules included in the runtime as a nested tuple of types. Excludes the System pallet."],["AllModulesWithSystem","All modules included in the runtime as a nested tuple of types."],["AllPallets","All pallets included in the runtime as a nested tuple of types. Excludes the System pallet."],["AllPalletsWithSystem","All pallets included in the runtime as a nested tuple of types."],["Amount","Signed version of Balance"],["Aura",""],["AuraConfig",""],["AuraId","An Aura authority identifier using S/R 25519 as its crypto."],["BTCRelay",""],["BTCRelayConfig",""],["Balance","Balance of an account."],["Block","Block type as expected by this runtime."],["BlockId","BlockId type as expected by this runtime."],["BlockNumber","An index to a block."],["CheckedExtrinsic","Extrinsic type that has already been checked."],["ExchangeRateOracle",""],["ExchangeRateOracleConfig",""],["Executive","Executive: handles dispatch to the various modules."],["Fee",""],["FeeConfig",""],["Grandpa",""],["GrandpaConfig",""],["Hash","A hash of some data used by the chain."],["Header","Block header type as expected by this runtime."],["Issue",""],["IssueConfig",""],["Moment","An instant or duration in time."],["Nomination",""],["NominationConfig",""],["Nonce","Index of a transaction in the chain. 32-bit should be plenty."],["RandomnessCollectiveFlip",""],["Redeem",""],["RedeemConfig",""],["Refund",""],["RefundConfig",""],["Relay",""],["Replace",""],["ReplaceConfig",""],["Rewards",""],["Security",""],["Signature","Alias to 512-bit hash when used in the context of a transaction signature on the chain."],["SignedBlock","A Block signed with a Justification"],["SignedExtra","The SignedExtension to the basic transaction logic."],["SignedFixedPoint","The signed fixed point type."],["SignedInner","The `Inner` type of the `SignedFixedPoint`."],["Sla",""],["SlaConfig",""],["Staking",""],["Sudo",""],["SudoConfig",""],["System",""],["SystemConfig",""],["Timestamp",""],["Tokens",""],["TokensConfig",""],["TransactionPayment",""],["UncheckedExtrinsic","Unchecked extrinsic type as expected by this runtime."],["UnsignedFixedPoint","The unsigned fixed point type."],["UnsignedInner","The `Inner` type of the `UnsignedFixedPoint`."],["Utility",""],["VaultRegistry",""],["VaultRegistryConfig",""],["Weight","Numeric range of a transaction weight."]]});